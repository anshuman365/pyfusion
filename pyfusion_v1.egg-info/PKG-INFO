Metadata-Version: 2.4
Name: pyfusion_v1
Version: 1.0.0
Summary: All-in-One Python Framework with built-in web, database, and utilities
Home-page: https://github.com/anshuman365/pyfusion
Author: PyFusion Team
Author-email: PyFusion Team <anshumansingh3697@gmail.com>
Project-URL: Homepage, https://github.com/anshuman365/pyfusion
Project-URL: Bug Reports, https://github.com/anshuman365/pyfusion/issues
Project-URL: Source, https://github.com/anshuman365/pyfusion
Keywords: framework,web,database,utilities
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: flask>=2.0.0
Requires-Dist: requests>=2.25.0
Requires-Dist: sqlalchemy>=1.4.0
Requires-Dist: jinja2>=3.0.0
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# PyFusion - All-in-One Python Framework

A comprehensive Python framework that bundles web development, database operations, and utility functions into a single, easy-to-use package.

## Features

- **Built-in Web Server** - Flask-based web framework
- **HTTP Client** - Easy API requests
- **Database Manager** - SQLite database operations
- **File Operations** - JSON, CSV, text file handling
- **Network Utilities** - Connectivity checks, validations
- **Data Helpers** - Validation, formatting, hashing

## Quick Start

```python
from pyfusion import WebServer, Database

# Create web server
app = WebServer()
db = Database()

@app.route('/hello')
def hello():
    return {"message": "Hello from PyFusion!"}

app.run(port=5000)
